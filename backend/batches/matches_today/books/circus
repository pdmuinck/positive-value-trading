#!/bin/bash

# create persistent websocket client connection
# call nc 127.0.0.1:1234 to get messages

circus_league_ids=$1
PORT=$2

rm -f betconstruct_events.csv

get_events() {
  league_id=$1
  echo About to get betconstruct events...
  echo '{"Id":"49b9e428-925c-4b45-0149-b17b3985c6ab","TTL":10,"MessageType":1000,"Message":"{\"Direction\":1,\"Id\":\"6907a9a1-28ea-c6b5-6d54-caa981a70599\",\"Requests\":[{\"Id\":\"c6ce7092-ad23-b92d-dafb-8d029cb63024\",\"Type\":201,\"Identifier\":\"GetLeaguesDataSourceFromCache\",\"AuthRequired\":false,\"Content\":\"{\\\"Entity\\\":{\\\"Language\\\":\\\"en\\\",\\\"BettingActivity\\\":0,\\\"PageNumber\\\":0,\\\"OnlyShowcaseMarket\\\":true,\\\"IncludeSportList\\\":true,\\\"EventSkip\\\":0,\\\"EventTake\\\":500,\\\"EventType\\\":0,\\\"SportId\\\":844,\\\"RequestString\\\":\\\"LeagueIds='"${league_id}"'&OnlyMarketGroup=Main\\\"}}\"}],\"Groups\":[]}"}' \
  | nc 127.0.0.1 "${PORT}"

  found_events=''

  while [ -z "${found_events}" ]
  do
     circus_response=$(nc 127.0.0.1 "${PORT}" \
    | jq --raw-output '.Message' \
    | jq --raw-output '.Requests[0].Content')

    found_events=$(node ./books/lzstring_parser "${circus_response}")

    null_string='null'

    if [ "${found_events}" == "${null_string}" ]; then
      found_events=''
    else
      echo "${found_events}" | jq --raw-output '.LeagueDataSource.LeagueItems[].EventItems[]
      | [.EventId, (.UrlBetStats | split("/")[6]), "betconstruct", .LeagueId] | @csv'
    fi

  done


}

for league_id in $circus_league_ids;do
  get_events "${league_id}"
done




