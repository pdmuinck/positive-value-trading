#!/bin/bash

# create persistent websocket client connection
# call nc 127.0.0.1:1234 to get messages

rm -f betconstruct_apps_events.csv

websocat -t -B 1000000 -E tcp-l:127.0.0.1:5695 reuse-raw:wss://eu-swarm-ws-re.bcapps.net --max-messages-rev 1&
WS_PID=$!
echo created websocket client with pid "${WS_PID}"

nc 127.0.0.1 5695
echo about to log in...
rid=$(date +%s)
echo '{"command":"request_session","params":{"language":"eng","site_id":"385","release_date":"15/09/2020-16:48"},"rid":"'"${rid}"'"}' \
| nc 127.0.0.1 5695

login_success=$(nc 127.0.0.1 5695)
echo Login success: "${login_success}"

get_events() {
  echo About to get betconstruct events...
  echo echo '{"command":"get","params":{"source":"betting","what":{"game":["id", "team1_name", "team1_id", "team2_name", "team2_id"]},"where":{"competition":{"id":538}},"subscribe":true},"rid":"'"${rid}"'"}' \ \
  | nc 127.0.0.1 5695

  touch betconstruct_apps_events_raw.csv
  found_events=$(wc -c betconstruct_apps_events_raw.csv | awk '{print $1}')

  while [ "${found_events}" == 0 ]
  do
     nc 127.0.0.1 5695 >> betconstruct_apps_events_raw.csv
     found_events=$(wc -c betconstruct_apps_events_raw.csv | awk '{print $1}')
  done
  echo Found BETCONSTRUCT APPS events = "${found_events}"
}

if [ -n "${login_success}" ]
  then
  get_events
fi

betconstruct_apps_output=$(cat betconstruct_apps_events_raw.csv)
#betconstruct_apps_output=${betconstruct_apps_output//227875758/jupiler_pro_league}
#betconstruct_apps_output=${betconstruct_apps_output//54287323/ligue_1}
#betconstruct_apps_output=${betconstruct_apps_output//54297345/bundesliga}
#betconstruct_apps_output=${betconstruct_apps_output//54344509/serie_a}
#betconstruct_apps_output=${betconstruct_apps_output//1397387603/la_liga}


echo "${betconstruct_apps_output}" > betconstruct_apps_events.csv

echo GOT BETCONSTRUCT APPS...

rm betconstruct_apps_events_raw.csv

echo kill websocket client...
kill -9 "${WS_PID}"

